How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    If the bug incurred at recent changes, we can start from the lines where 
    changes are made to detect bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It enables a programmer to keep track of what he've tried and what haven't.
    Plus, he never need to write down whole new codes when he wants to work on
    the previous version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros : The history of commit becomes more meaningful
    cons : I may forget to save then it would accidentally initialized.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Usually codes are interreactive while docs files are not.

How can you use the commands git log and git diff to view the history of files?

    git log : shows commit id, summary of commit
    git diff : need commit id from git log, and compares two logs then changes
    	in two commits are shown. 

How might using version control make you more confident to make changes that
could break something?

    I can go back to the recent file anytime I want

Now that you have your workspace set up, what do you want to try using Git for?

    working with my project
